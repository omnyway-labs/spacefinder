["^ ","~:output",["^ ","~:js","goog.provide('rewrite_clj.parser.whitespace');\ngoog.require('cljs.core');\ngoog.require('rewrite_clj.node');\ngoog.require('rewrite_clj.reader');\n/**\n * Parse as much whitespace as possible. The created node can either contain\n * only linebreaks or only space/tabs.\n */\nrewrite_clj.parser.whitespace.parse_whitespace = (function rewrite_clj$parser$whitespace$parse_whitespace(reader){\nif(rewrite_clj.reader.linebreak_QMARK_((rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.reader.peek_char.cljs$core$IFn$_invoke$arity$1(reader) : rewrite_clj.reader.peek_char.call(null,reader)))){\nvar G__48626 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.linebreak_QMARK_);\nreturn (rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.newline_node.cljs$core$IFn$_invoke$arity$1(G__48626) : rewrite_clj.node.newline_node.call(null,G__48626));\n} else {\nvar G__48627 = rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2(reader,rewrite_clj.reader.space_QMARK_);\nreturn (rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1 ? rewrite_clj.node.whitespace_node.cljs$core$IFn$_invoke$arity$1(G__48627) : rewrite_clj.node.whitespace_node.call(null,G__48627));\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rewrite_clj/parser/whitespace.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$rewrite-clj.parser.whitespace","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$rewrite-clj.node","^U","~$node","^U","~$rewrite-clj.reader","^W","~$r","^W","~$cljs.core","^X","~$goog","^Y"],"~:seen",["^N",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^X","^X"],"~:form",["~#list",["~$ns","^P",["^13",["^[",["^U","~:as","^V"],["^W","^15","~$r"]]]]],"~:flags",["^ ","^[",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^U","^W"]],"^R","^P","~:resource-id",["~:shadow.build.classpath/resource","rewrite_clj/parser/whitespace.cljs"],"~:compiled-at",1566016973785,"~:resource-name","rewrite_clj/parser/whitespace.cljs","~:warnings",[],"~:source","(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;;;AAIA;;;;AAAA,AAAMA,AAGSC;AAHf,AAIE,AAAI,AAACC,AAAa,AAACC,AAAAA,AAAAA,AAAYF,AAAAA;AAC7B,AAAAG,AACE,AAACE,AAAaL,AAAOC;AADvB,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;AAED,AAAAE,AACE,AAACD,AAAaL,AAAOQ;AADvB,AAAA,AAAAF,AAAAA,AAACC,AAAAA,AAAAA","names",["rewrite-clj.parser.whitespace/parse-whitespace","reader","rewrite-clj.reader/linebreak?","rewrite-clj.reader/peek-char","G__48626","rewrite-clj.node/newline-node","rewrite_clj.reader.read_while.cljs$core$IFn$_invoke$arity$2","G__48627","rewrite-clj.node/whitespace-node","rewrite-clj.reader/space?"]]],"~:cache-keys",["~#cmap",[["^1:","rewrite_clj/node/token.cljs"],[1541378006000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^Y","^X","~$rewrite-clj.node.protocols"]]],["^1:","cljs/tools/reader/impl/utils.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","~$clojure.string","~$goog.string"]]],["^1:","goog/math/math.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","~$goog.array","~$goog.asserts"]]],["^1:","goog/array/array.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1O"]]],["^1:","goog/debug/error.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","goog/dom/nodetype.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","cljs/tools/reader/impl/inspect.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X"]]],["^1:","cljs/tools/reader.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader.impl.errors","^1N","^1M","~$goog.string.StringBuffer"]]],["^1:","rewrite_clj/node/forms.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","goog/object/object.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],"~:SHADOW-TIMESTAMP",[1566006790000,1563067190000],["^1:","goog/math/long.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1O","~$goog.reflect"]]],["^1:","rewrite_clj/node/reader_macro.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K","~$rewrite-clj.node.whitespace"]]],["^1:","goog/string/internal.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","goog/functions/functions.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","clojure/walk.cljs"],[1563067190000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X"]]],["^1:","goog/structs/map.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1:","rewrite_clj/node/meta.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K","^1W"]]],["^1:","rewrite_clj/node/stringz.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K","~$cljs.tools.reader","^1L"]]],["^1:","rewrite_clj/node/comment.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","rewrite_clj/node/keyword.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","goog/asserts/asserts.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1:","goog/uri/uri.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1N","^1O","^1M","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1:","rewrite_clj/node/protocols.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1L"]]],["^1:","rewrite_clj/node/seq.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","rewrite_clj/node/uneval.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","goog/base.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",[]]],["^1:","goog/structs/structs.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1N","~$goog.object"]]],["^1:","cljs/tools/reader/impl/errors.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1P","^1L","~$cljs.tools.reader.impl.inspect"]]],["^1:","rewrite_clj/node/whitespace.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","rewrite_clj/node/coercer.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","~$rewrite-clj.node.comment","~$rewrite-clj.node.forms","~$rewrite-clj.node.keyword","~$rewrite-clj.node.quote","~$rewrite-clj.node.stringz","~$rewrite-clj.node.uneval","~$rewrite-clj.node.meta","~$rewrite-clj.node.fn","^1K","~$rewrite-clj.node.reader-macro","~$rewrite-clj.node.seq","~$rewrite-clj.node.token","^1W"]]],["^1:","clojure/string.cljs"],[1563067190000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1M","^1T"]]],["^1:","goog/string/string.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","~$goog.string.internal"]]],["^1:","goog/reflect/reflect.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","rewrite_clj/node/fn.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K","~$clojure.walk"]]],["^1:","rewrite_clj/node.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","~$rewrite-clj.node.coercer","^1K","^2:","^2A","^1W","^2B","^28","^29","^2>","^2<","^2@","^2;","^2=","^2?"]]],["^1:","goog/string/stringbuffer.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","cljs/tools/reader/reader_types.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1Q","^1M","^1T"]]],["^1:","goog/iter/iter.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1N","^1O","~$goog.functions","~$goog.math"]]],["^1:","rewrite_clj/reader.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1Z","^1P","^1R","^1M","^1K"]]],["^1:","rewrite_clj/node/quote.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1K"]]],["^1:","cljs/tools/reader/impl/commons.cljs"],[1532582253000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^1S","^1P","^1Q"]]],["^1:","cljs/core.cljs"],[1563067190000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["~$goog.math.Long","~$goog.math.Integer","^1M","^26","^1N","~$goog.Uri","^1T"]]],["^1:","goog/math/integer.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y"]]],["^1:","goog/uri/utils.js"],[1564811506000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^1N","^1O","^1M"]]],["^1:","rewrite_clj/parser/whitespace.cljs"],[1541378006000,"^1G",["^ ","^1H",null,"^1I",["^N",[]],"^1J",["^Y","^X","^U","^W"]]]]],"~:clj-info",["^ ","jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/cljs/tools/reader/reader_types.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1531525495000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1541378006000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1532582253000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",null,"^M",["^N",[]],"^O","^P","^S",null,"^T",["^ ","^U","^U","^V","^U","^W","^W","~$r","^W","^X","^X","^Y","^Y"],"^Z",["^N",["^["]],"^10",null,"~:defs",["^ ","~$parse-whitespace",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rewrite_clj/parser/whitespace.cljs","^7",5,"^8",7,"^9",5,"^:",23,"~:arglists",["^13",["~$quote",["^13",[["~$reader"]]]]],"~:doc","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."],"^O","~$rewrite-clj.parser.whitespace/parse-whitespace","^6","rewrite_clj/parser/whitespace.cljs","^:",23,"~:method-params",["^13",[["^3@"]]],"~:protocol-impl",null,"~:arglists-meta",["^13",[null,null]],"^8",1,"~:variadic?",false,"^7",5,"~:ret-tag","~$any","^9",5,"~:max-fixed-arity",1,"~:fn-var",true,"^3>",["^13",["^3?",["^13",[["^3@"]]]]],"^3A","Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs."]],"^11",["^ ","^X","^X"],"^16",["^ ","^[",["^N",[]]],"^17",["^ "],"^18",["^Y","^X","^U","^W"]],"^R","^P","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1F",[["^3M","~:static-fns"],true,["^3M","~:elide-asserts"],false,["^3M","~:optimize-constants"],null,["^3M","^1="],null,["^3M","~:external-config"],null,["^3M","~:tooling-config"],null,["^3M","~:emit-constants"],null,["^3M","~:load-tests"],null,["^3M","~:infer-externs"],true,["^3M","^1?"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^3M","~:fn-invoke-direct"],null,["^3M","~:source-map"],"/dev/null"]]]