["^ ","~:output",["^ ","~:js","goog.provide('reagent.debug');\ngoog.require('cljs.core');\nreagent.debug.has_console = (typeof console !== 'undefined');\nreagent.debug.tracking = false;\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.warnings !== 'undefined')){\n} else {\nreagent.debug.warnings = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !== 'undefined') && (typeof reagent.debug !== 'undefined') && (typeof reagent.debug.track_console !== 'undefined')){\n} else {\nreagent.debug.track_console = (function (){var o = ({});\no.warn = ((function (o){\nreturn (function() { \nvar G__50105__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__50105 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__50108__i = 0, G__50108__a = new Array(arguments.length -  0);\nwhile (G__50108__i < G__50108__a.length) {G__50108__a[G__50108__i] = arguments[G__50108__i + 0]; ++G__50108__i;}\n  args = new cljs.core.IndexedSeq(G__50108__a,0,null);\n} \nreturn G__50105__delegate.call(this,args);};\nG__50105.cljs$lang$maxFixedArity = 0;\nG__50105.cljs$lang$applyTo = (function (arglist__50110){\nvar args = cljs.core.seq(arglist__50110);\nreturn G__50105__delegate(args);\n});\nG__50105.cljs$core$IFn$_invoke$arity$variadic = G__50105__delegate;\nreturn G__50105;\n})()\n;})(o))\n;\n\no.error = ((function (o){\nreturn (function() { \nvar G__50111__delegate = function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__50111 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__50115__i = 0, G__50115__a = new Array(arguments.length -  0);\nwhile (G__50115__i < G__50115__a.length) {G__50115__a[G__50115__i] = arguments[G__50115__i + 0]; ++G__50115__i;}\n  args = new cljs.core.IndexedSeq(G__50115__a,0,null);\n} \nreturn G__50111__delegate.call(this,args);};\nG__50111.cljs$lang$maxFixedArity = 0;\nG__50111.cljs$lang$applyTo = (function (arglist__50116){\nvar args = cljs.core.seq(arglist__50116);\nreturn G__50111__delegate(args);\n});\nG__50111.cljs$core$IFn$_invoke$arity$variadic = G__50111__delegate;\nreturn G__50111;\n})()\n;})(o))\n;\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings = (function reagent$debug$track_warnings(f){\nreagent.debug.tracking = true;\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns = cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\nreagent.debug.tracking = false;\n\nreturn warns;\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/debug.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$react-flip-move","~$module$node_modules$react_flip_move$dist$react_flip_move_cjs","~$clojure.pprint","~$cljs.pprint","~$clojure.repl","~$cljs.repl","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$assert-js-object",["^ ","~:arglists",["~#list",[["~$value"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","~:name","~$reagent.debug/assert-js-object","~:ns","~$reagent.debug","~:macro",true],"~$log",["^ ","^Q",["^R",[["~$&","~$forms"]]],"~:doc","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/log","^V","^W","^X",true],"~$warn-unless",["^ ","^Q",["^R",[["~$cond","~$&","^Z"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/warn-unless","^V","^W","^X",true],"~$assert-some",["^ ","^Q",["^R",[["^S","~$tag"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/assert-some","^V","^W","^X",true],"~$assert-new-state",["^ ","^Q",["^R",[["^S"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/assert-new-state","^V","^W","^X",true],"~$dbg",["^ ","^Q",["^R",[["~$x"]]],"^[","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/dbg","^V","^W","^X",true],"~$prn",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/prn","^V","^W","^X",true],"~$warn",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/warn","^V","^W","^X",true],"~$dev?",["^ ","^Q",["^R",[[]]],"^[","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/dev?","^V","^W","^X",true],"~$println",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/println","^V","^W","^X",true],"~$time",["^ ","^Q",["^R",[["~$&","^Z"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/time","^V","^W","^X",true],"~$assert-component",["^ ","^Q",["^R",[["^S"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/assert-component","^V","^W","^X",true],"~$assert-callable",["^ ","^Q",["^R",[["^S"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/assert-callable","^V","^W","^X",true],"~$error",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^T","~$reagent.debug/error","^V","^W","^X",true]],"^T","^W","~:op","^V","~:imports",null,"~:requires",["^ ","~$cljs.core","^1N","~$goog","^1O"],"~:seen",["^N",["~:require-macros"]],"~:uses",null,"^1Q",["^ ","^W","^W","^1N","^1N"],"~:form",["^R",["~$ns","^W",["^R",["^1Q",["^W"]]]]],"~:flags",["^ ","^1Q",["^N",[]]],"~:js-deps",["^ "],"~:deps",["^1O","^1N"]],"^V","^W","~:resource-id",["~:shadow.build.classpath/resource","reagent/debug.cljs"],"~:compiled-at",1566016974887,"~:resource-name","reagent/debug.cljs","~:warnings",[],"~:source","(ns reagent.debug\n  (:require-macros [reagent.debug]))\n\n(def ^:const has-console (exists? js/console))\n\n(def ^boolean tracking false)\n\n(defonce warnings (atom nil))\n\n(defonce track-console\n  (let [o #js{}]\n    (set! (.-warn o)\n          (fn [& args]\n            (swap! warnings update-in [:warn] conj (apply str args))))\n    (set! (.-error o)\n          (fn [& args]\n            (swap! warnings update-in [:error] conj (apply str args))))\n    o))\n\n(defn track-warnings [f]\n  (set! tracking true)\n  (reset! warnings nil)\n  (f)\n  (let [warns @warnings]\n    (reset! warnings nil)\n    (set! tracking false)\n    warns))\n","~:reader-features",["^N",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings",";;AAGA,AAAaA,AAAY,AAAAC;AAEzB,AAAA,AAAcC;AAEd,AAAA,AAAAC,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAS,AAAA,AAACC;;AAEnB,AAAA,AAAAJ,AAAAC,AAAAI;AAAA;AAAA,AAAA,AAASC,AACP,AAAA,AAAMC;AAAN,AACE,AAAM,AAAQA,AACR;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAkBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD7CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEb,AAAM,AAASD,AACT;;AAAOC;AAAP,AACE,AAAA,AAAA,AAACC,AAAMN,AAASO,AAAmBC,AAAK,AAACC,AAAMC,AAAIL;;;AAD9CA;;;;AAAAA;;AAAAA;;;AAAAA;AAAAA;;;;;;;;AAEbD;;;AAEJ,AAAA,AAAMO,AAAgBC;AAAtB,AACE,AAAA,AAAMhB;;AACN,AAAA,AAACiB,AAAOb;;AACR,AAACY,AAAAA,AAAAA;;AACD,AAAA,AAAAE,AAAMC,AAAOf;AAAb,AACE,AAAA,AAACa,AAAOb;;AACR,AAAA,AAAMJ;;AACNmB","names",["reagent.debug/has-console","js/console","reagent.debug/tracking","js/reagent","js/reagent.debug","js/reagent.debug.warnings","reagent.debug/warnings","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","js/reagent.debug.track-console","reagent.debug/track-console","o","args","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic","cljs.core/update-in","cljs.core/conj","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/str","reagent.debug/track-warnings","f","cljs.core/reset!","cljs.core/deref","warns"]]],"~:cache-keys",["~#cmap",[["^1Y","goog/math/math.js"],[1564811506000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^N",[]],"~:deps-syms",["^1O","~$goog.array","~$goog.asserts"]]],["^1Y","goog/array/array.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2?"]]],["^1Y","goog/debug/error.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/dom/nodetype.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/object/object.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],"~:SHADOW-TIMESTAMP",[1566006790000,1563067190000],["^1Y","goog/math/long.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2?","~$goog.reflect"]]],["^1Y","goog/string/internal.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/functions/functions.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/structs/map.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1Y","goog/asserts/asserts.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Y","goog/uri/uri.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2>","^2?","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Y","goog/base.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",[]]],["^1Y","goog/structs/structs.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2>","~$goog.object"]]],["^1Y","goog/string/string.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","~$goog.string.internal"]]],["^1Y","goog/reflect/reflect.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/string/stringbuffer.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/iter/iter.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2>","^2?","~$goog.functions","~$goog.math"]]],["^1Y","cljs/core.cljs"],[1563067190000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["~$goog.math.Long","~$goog.math.Integer","^2F","^2L","^2>","~$goog.Uri","~$goog.string.StringBuffer"]]],["^1Y","reagent/debug.cljs"],[1540785317000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^1N"]]],["^1Y","goog/math/integer.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O"]]],["^1Y","goog/uri/utils.js"],[1564811506000,"^2:",["^ ","^2;",null,"^2<",["^N",[]],"^2=",["^1O","^2>","^2?","^2F"]]]]],"~:clj-info",["^ ","jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1531525495000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/reagent/reagent/0.8.1/reagent-0.8.1.jar!/reagent/debug.clj",1540785317000,"jar:file:/Users/rberger/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1541378006000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1563067189000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1532582253000,"jar:file:/Users/rberger/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1563067190000,"jar:file:/Users/rberger/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1532582253000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/debug.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G","^H","^I","^J","^K"],"^L",null,"^M",["^N",[]],"^O",["^ ","^P",["^ ","^Q",["^R",[["^S"]]],"^7",83,"^8",1,"^6","reagent/debug.clj","^T","^U","^V","^W","^X",true],"^Y",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print with console.log, if it exists.","^7",4,"^8",1,"^6","reagent/debug.clj","^T","^10","^V","^W","^X",true],"^11",["^ ","^Q",["^R",[["^12","~$&","^Z"]]],"^7",19,"^8",1,"^6","reagent/debug.clj","^T","^13","^V","^W","^X",true],"^14",["^ ","^Q",["^R",[["^S","^15"]]],"^7",75,"^8",1,"^6","reagent/debug.clj","^T","^16","^V","^W","^X",true],"^17",["^ ","^Q",["^R",[["^S"]]],"^7",88,"^8",1,"^6","reagent/debug.clj","^T","^18","^V","^W","^X",true],"^19",["^ ","^Q",["^R",[["~$x"]]],"^[","Useful debugging macro that prints the source and value of x,\nas well as package name and line number. Returns x.","^7",45,"^8",1,"^6","reagent/debug.clj","^T","^1:","^V","^W","^X",true],"^1;",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Like standard prn, but prints using console.log (so that we get\nnice clickable links to source in modern browsers).","^7",39,"^8",1,"^6","reagent/debug.clj","^T","^1<","^V","^W","^X",true],"^1=",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print with console.warn.","^7",10,"^8",1,"^6","reagent/debug.clj","^T","^1>","^V","^W","^X",true],"^1?",["^ ","^Q",["^R",[[]]],"^[","True if assertions are enabled.","^7",60,"^8",1,"^6","reagent/debug.clj","^T","^1@","^V","^W","^X",true],"^1A",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print string with console.log","^7",34,"^8",1,"^6","reagent/debug.clj","^T","^1B","^V","^W","^X",true],"^1C",["^ ","^Q",["^R",[["~$&","^Z"]]],"^7",65,"^8",1,"^6","reagent/debug.clj","^T","^1D","^V","^W","^X",true],"^1E",["^ ","^Q",["^R",[["^S"]]],"^7",78,"^8",1,"^6","reagent/debug.clj","^T","^1F","^V","^W","^X",true],"^1G",["^ ","^Q",["^R",[["^S"]]],"^7",93,"^8",1,"^6","reagent/debug.clj","^T","^1H","^V","^W","^X",true],"^1I",["^ ","^Q",["^R",[["~$&","^Z"]]],"^[","Print with console.error.","^7",25,"^8",1,"^6","reagent/debug.clj","^T","^1J","^V","^W","^X",true]],"^T","^W","^1L",null,"^1M",["^ ","^1N","^1N","^1O","^1O"],"^1P",["^N",["^1Q"]],"^1R",null,"~:defs",["^ ","~$has-console",["^ ","^5",["^ ","^6","reagent/debug.cljs","^7",4,"^8",14,"^9",4,"^:",25,"~:const",true],"^T","~$reagent.debug/has-console","^6","reagent/debug.cljs","^:",25,"^8",1,"^3F",true,"^7",4,"^9",4,"~:tag","~$boolean"],"~$tracking",["^ ","^T","~$reagent.debug/tracking","^6","reagent/debug.cljs","^7",6,"^8",1,"^9",6,"^:",23,"^3H","^3I","^5",["^ ","^6","reagent/debug.cljs","^7",6,"^8",15,"^9",6,"^:",23,"^3H","^3I"]],"~$warnings",["^ ","^T","~$reagent.debug/warnings","^6","reagent/debug.cljs","^7",8,"^8",1,"^9",8,"^:",18,"^5",["^ ","^6","reagent/debug.cljs","^7",8,"^8",10,"^9",8,"^:",18],"^3H","~$cljs.core/Atom"],"~$track-console",["^ ","^T","~$reagent.debug/track-console","^6","reagent/debug.cljs","^7",10,"^8",1,"^9",10,"^:",23,"^5",["^ ","^6","reagent/debug.cljs","^7",10,"^8",10,"^9",10,"^:",23],"^3H","~$object"],"~$track-warnings",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/debug.cljs","^7",20,"^8",7,"^9",20,"^:",21,"^Q",["^R",["~$quote",["^R",[["~$f"]]]]]],"^T","~$reagent.debug/track-warnings","^6","reagent/debug.cljs","^:",21,"~:method-params",["^R",[["~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^R",[null,null]],"^8",1,"~:variadic?",false,"^7",20,"~:ret-tag","~$any","^9",20,"~:max-fixed-arity",1,"~:fn-var",true,"^Q",["^R",["^3T",["^R",[["~$f"]]]]]]],"^1Q",["^ ","^W","^W","^1N","^1N"],"~:cljs.analyzer/constants",["^ ","^1P",["^N",["~:warn","~:error"]],"~:order",["^43","^44"]],"^1U",["^ ","^1Q",["^N",[]]],"^1V",["^ "],"^1W",["^1O","^1N"]],"^V","^W","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^29",[["^48","~:static-fns"],true,["^48","~:elide-asserts"],false,["^48","~:optimize-constants"],null,["^48","^20"],null,["^48","~:external-config"],null,["^48","~:tooling-config"],null,["^48","~:emit-constants"],null,["^48","~:load-tests"],null,["^48","~:infer-externs"],true,["^48","^22"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^48","~:fn-invoke-direct"],null,["^48","~:source-map"],"/dev/null"]]]